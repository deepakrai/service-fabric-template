{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterDnsName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 23,
      "metadata": {
        "description": "Globally unique name of your cluster, between 3 and 23 characters. Letters and numbers only"
      }
    },
    "computeLocation": {
      "type": "string",
      "defaultValue": "East US",
      "allowedValues": [
        "East Asia",
        "Southeast Asia",
        "Central US",
        "East US",
        "East US 2",
        "West US",
        "North Central US",
        "South Central US",
        "North Europe",
        "West Europe",
        "Japan West",
        "Japan East",
        "Brazil South",
        "Canada Central",
        "Canada East",
        "West Central US",
        "West US 2"
      ],
      "metadata": {
        "description": "Select the location for your SF resources"
      }
    },
    "osDiskStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The managed disk tier to use for the OS Disk."
      }
    },
    "node0VMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D2_v3",
        "Standard_D4_v3"
      ],
      "defaultValue": "Standard_D2",
      "metadata": {
        "description": "The cluster VM SKU"
      }
    },
    "node0Count": {
      "type": "string",
      "defaultValue": "5",
      "metadata": {
        "description": "Cluster VM count"
      }
    },
    "node0Durability": {
      "type": "string",
      "allowedValues": [
        "Bronze",
        "Silver",
        "Gold"
      ],
      "defaultValue": "Silver",
      "metadata": {
        "description": "Service Fabric Durability for the Primary Node Type "
      }
    },
    "node1VMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D2_v3",
        "Standard_D4_v3"
      ],
      "defaultValue": "Standard_D2",
      "metadata": {
        "description": "The cluster VM SKU"
      }
    },
    "node1Count": {
      "type": "string",
      "defaultValue": "5",
      "metadata": {
        "description": "Cluster VM count"
      }
    },
    "node1Durability": {
      "type": "string",
      "allowedValues": [
        "Bronze",
        "Silver",
        "Gold"
      ],
      "defaultValue": "Silver",
      "metadata": {
        "description": "Service Fabric Durability for the Backend Node Type"
      }
    },
    "serviceFabricReliabilty": {
      "type": "string",
      "allowedValues": [
        "Bronze",
        "Silver",
        "Gold"
      ],
      "defaultValue": "Silver",
      "metadata": {
        "description": "Service Fabric Reliability (System Services) "
      }
    },
    "publicIPAddressType": {
      "type": "string",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "defaultValue": "Dynamic",
      "metadata": {
        "description": "Select the IP allocation for the public IP address"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureadmin",
      "metadata": {
        "description": "Remote desktop user Id"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Remote desktop user password. Must be a strong password"
      }
    },
    "sfReverseProxyPort": {
      "type": "int",
      "defaultValue": 19081,
      "metadata": {
        "description": "Endpoint for Service Fabric Reverse proxy"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS"
      ]
    },
    "omsWorkspaceRegion": {
      "type": "string",
      "defaultValue": "East US",
      "allowedValues": [
        "West Europe",
        "East US",
        "Southeast Asia"
      ],
      "metadata": {
        "description": "Specify the Azure Region for your OMS workspace"
      }
    },
    "omsServiceTier": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Standalone",
        "PerNode"
      ],
      "defaultValue": "PerNode",
      "metadata": {
        "description": "Service Tier: Free, Standalone, or PerNode"
      }
    },
    "omsPerfCounterInterval": {
      "type": "string",
      "defaultValue": "60",
      "metadata": {
        "description": "Performance counter reporting interval (in seconds)"
      }
    },
    "perfCounterSampleRate": {
      "type": "string",
      "defaultValue": "PT1M",
      "metadata": {
        "description": "Sample rate for performance counters"
      }
    },
    "perCounterTransferPeriod": {
      "type": "string",
      "defaultValue": "PT1M",
      "metadata": {
        "description": "Transfer rate for performance counters uploaded to diagnostics."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/jpoon/service-fabric-template/master",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located"
      }
    }
  },
  "variables": {
    "vmName": "vm",
    "vmImageVersion": "latest",
    "vmImageSku": "2016-Datacenter",
    "vmImageOffer": "WindowsServer",
    "vmImagePublisher": "MicrosoftWindowsServer",
    "virtualNetworkName": "[concat(parameters('clusterDnsName'), '-', 'vnet')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "addressPrefix": "10.0.0.0/16",
    "nicName": "nic",
    "supportLogStorageAccountName": "[toLower(concat(parameters('clusterDnsName'), 'log'))]",
    "applicationDiagnosticsStorageAccountName": "[toLower(concat(parameters('clusterDnsName'), 'diag'))]",
    "nt0applicationStartPort": 20000,
    "nt0applicationEndPort": 30000,
    "nt0ephemeralStartPort": 49152,
    "nt0ephemeralEndPort": 65534,
    "nt0fabricTcpGatewayPort": 19000,
    "nt0fabricHttpGatewayPort": 19080,
    "subnet0Name": "Subnet-0",
    "subnet0Prefix": "10.0.0.0/24",
    "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet0Name'))]",
    "nt1applicationStartPort": 20000,
    "nt1applicationEndPort": 30000,
    "nt1ephemeralStartPort": 49152,
    "nt1ephemeralEndPort": 65534,
    "nt1fabricTcpGatewayPort": 19000,
    "nt1fabricHttpGatewayPort": 19080,
    "subnet1Name": "Subnet-1",
    "subnet1Prefix": "10.0.1.0/24",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "pipName0": "pip-sf",
    "lbName0": "[toLower(concat(parameters('clusterDnsName'), '-LB-', variables('vmNodeType0Name')))]",
    "lbID0": "[resourceId('Microsoft.Network/loadBalancers', variables('lbName0'))]",
    "lbIPConfig0": "[concat(variables('lbID0'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
    "lbPoolID0": "[concat(variables('lbID0'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
    "lbProbeID0": "[concat(variables('lbID0'),'/probes/FabricGatewayProbe')]",
    "lbHttpProbeID0": "[concat(variables('lbID0'),'/probes/FabricHttpGatewayProbe')]",
    "lbReverseProxyProbeID0": "[concat(variables('lbID0'),'/probes/FabricReverseProxyProbe')]",
    "lbNatPoolID0": "[concat(variables('lbID0'),'/inboundNatPools/LoadBalancerBEAddressNatPool')]",
    "vmNodeType0Name": "[toLower(concat(variables('vmName'), '-sf'))]",
    "pipName1": "pip-backend",
    "lbName1": "[toLower(concat(parameters('clusterDnsName'), '-LB-', variables('vmNodeType1Name')))]",
    "lbID1": "[resourceId('Microsoft.Network/loadBalancers', variables('lbName1'))]",
    "lbIPConfig1": "[concat(variables('lbID1'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
    "lbPoolID1": "[concat(variables('lbID1'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
    "lbProbeID1": "[concat(variables('lbID1'),'/probes/FabricGatewayProbe')]",
    "lbHttpProbeID1": "[concat(variables('lbID1'),'/probes/FabricHttpGatewayProbe')]",
    "lbReverseProxyProbeID1": "[concat(variables('lbID1'),'/probes/FabricReverseProxyProbe')]",
    "lbNatPoolID1": "[concat(variables('lbID1'),'/inboundNatPools/LoadBalancerBEAddressNatPool')]",
    "vmNodeType1Name": "[toLower(concat(variables('vmName'), '-backend'))]",
    "omsWorkspaceName": "[concat(parameters('clusterDnsName'), '-oms')]",
    "nestedTemplates": {
      "omsWorkspace": "[concat(parameters('_artifactsLocation'), '/nestedTemplates/omsWorkspace.json')]"
    },
    "vmssNames": "[createArray(variables('vmNodeType0Name'), variables('vmNodeType1Name'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "omsWorkspaceDeployment",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('applicationDiagnosticsStorageAccountName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nestedTemplates').omsWorkspace]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "omsWorkspaceName": {
            "value": "[variables('omsWorkspaceName')]"
          },
          "omsWorkspaceRegion": {
            "value": "[parameters('omsWorkspaceRegion')]"
          },
          "omsServiceTier": {
            "value": "[parameters('omsServiceTier')]"
          },
          "omsPerfCounterInterval": {
            "value": "[parameters('omsPerfCounterInterval')]"
          },
          "applicationDiagnosticsStorageAccountName": {
            "value": "[variables('applicationDiagnosticsStorageAccountName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('supportLogStorageAccountName')]",
      "location": "[parameters('computeLocation')]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      },
      "tags": {
        "clusterDnsName": "[parameters('clusterDnsName')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('applicationDiagnosticsStorageAccountName')]",
      "location": "[parameters('computeLocation')]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      },
      "tags": {
        "clusterDnsName": "[parameters('clusterDnsName')]"
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', concat('nsg', variables('subnet0Name')))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', concat('nsg', variables('subnet1Name')))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet0Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet0Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg', variables('subnet0Name')))]"
              }
            }
          },
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg', variables('subnet1Name')))]"
              }
            }
          }
        ]
      },
      "tags": {
        "clusterName": "[parameters('clusterDnsName')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('pipName1')]",
      "location": "[parameters('computeLocation')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('clusterDnsName'),'-','backend')]"
        },
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]"
      },
      "tags": {
        "clusterName": "[parameters('clusterDnsName')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('pipName0')]",
      "location": "[parameters('computeLocation')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('clusterDnsName'),'-','sf')]"
        },
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]"
      },
      "tags": {
        "clusterName": "[parameters('clusterDnsName')]"
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('lbName0')]",
      "location": "[parameters('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('pipName0'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerIPConfig",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('pipName0'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LoadBalancerBEAddressPool",
            "properties": {}
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": "[variables('nt0fabricTcpGatewayPort')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "[variables('nt0fabricTcpGatewayPort')]",
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID0')]"
              },
              "protocol": "Tcp"
            }
          },
          {
            "name": "LBHttpRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": "[variables('nt0fabricHttpGatewayPort')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "[variables('nt0fabricHttpGatewayPort')]",
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbHttpProbeID0')]"
              },
              "protocol": "Tcp"
            }
          },
          {
           "name": "LBSFReverseProxyRule",
           "properties": {
             "backendAddressPool": {
               "id": "[variables('lbPoolID0')]"
             },
             "backendPort": "[parameters('sfReverseProxyPort')]",
             "enableFloatingIP": false,
             "frontendIPConfiguration": {
               "id": "[variables('lbIPConfig0')]"
             },
             "frontendPort": "[parameters('sfReverseProxyPort')]",
             "idleTimeoutInMinutes": 5,
             "probe": {
               "id": "[variables('lbReverseProxyProbeID0')]"
             },
             "protocol": "Tcp"
           }
         }
        ],
        "probes": [
          {
            "name": "FabricGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[variables('nt0fabricTcpGatewayPort')]",
              "protocol": "Tcp"
            }
          },
          {
            "name": "FabricHttpGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[variables('nt0fabricHttpGatewayPort')]",
              "protocol": "Tcp"
            }
          },
          {
            "name": "FabricReverseProxyProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('sfReverseProxyPort')]",
              "protocol": "Tcp"
            }
          }
        ],
        "inboundNatPools": [
          {
            "name": "LoadBalancerBEAddressNatPool",
            "properties": {
              "backendPort": 3389,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPortRangeEnd": 4500,
              "frontendPortRangeStart": 3389,
              "protocol": "Tcp"
            }
          }
        ]
      },
      "tags": {
        "clusterName": "[parameters('clusterDnsName')]"
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat('nsg', variables('subnet0Name'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "allowSvcFabSMB",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "445",
              "direction": "Inbound",
              "priority": 3950,
              "protocol": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allowSvcFabCluser",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "1025-1027",
              "direction": "Inbound",
              "priority": 3920,
              "protocol": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allowSvcFabEphemeral",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "[concat(variables('nt0ephemeralStartPort'), '-', variables('nt0ephemeralEndPort'))]",
              "direction": "Inbound",
              "priority": 3930,
              "protocol": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allowSvcFabPortal",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "[variables('nt0fabricHttpGatewayPort')]",
              "direction": "Inbound",
              "priority": 3900,
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allowSvcFabClient",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "[variables('nt0fabricTcpGatewayPort')]",
              "direction": "Inbound",
              "priority": 3910,
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allowSvcFabApplication",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "[concat(variables('nt0applicationStartPort'), '-', variables('nt0applicationEndPort'))]",
              "direction": "Inbound",
              "priority": 3940,
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allowVNetRDP",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389-4500",
              "direction": "Inbound",
              "priority": 3960,
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allowReverseProxy",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "[parameters('sfReverseProxyPort')]",
              "direction": "Inbound",
              "priority": 3970,
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          }
        ]
      },
      "tags": {
        "clusterName": "[parameters('clusterDnsName')]"
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('lbName1')]",
      "location": "[parameters('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('pipName1'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerIPConfig",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('pipName1'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LoadBalancerBEAddressPool",
            "properties": {}
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID1')]"
              },
              "backendPort": "[variables('nt0fabricTcpGatewayPort')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig1')]"
              },
              "frontendPort": "[variables('nt0fabricTcpGatewayPort')]",
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID1')]"
              },
              "protocol": "Tcp"
            }
          },
          {
            "name": "LBHttpRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID1')]"
              },
              "backendPort": "[variables('nt0fabricHttpGatewayPort')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig1')]"
              },
              "frontendPort": "[variables('nt0fabricHttpGatewayPort')]",
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbHttpProbeID1')]"
              },
              "protocol": "Tcp"
            }
          },
          {
            "name": "LBSFReverseProxyRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID1')]"
              },
              "backendPort": "[parameters('sfReverseProxyPort')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig1')]"
              },
              "frontendPort": "[parameters('sfReverseProxyPort')]",
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbReverseProxyProbeID1')]"
              },
              "protocol": "Tcp"
            }
          }
        ],
        "probes": [
          {
            "name": "FabricGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[variables('nt0fabricTcpGatewayPort')]",
              "protocol": "Tcp"
            }
          },
          {
            "name": "FabricHttpGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[variables('nt0fabricHttpGatewayPort')]",
              "protocol": "Tcp"
            }
          },
          {
            "name": "FabricReverseProxyProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('sfReverseProxyPort')]",
              "protocol": "Tcp"
            }
          }
        ],
        "inboundNatPools": [
          {
            "name": "LoadBalancerBEAddressNatPool",
            "properties": {
              "backendPort": 3389,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig1')]"
              },
              "frontendPortRangeEnd": 4500,
              "frontendPortRangeStart": 3389,
              "protocol": "Tcp"
            }
          }
        ]
      },
      "tags": {
        "clusterName": "[parameters('clusterDnsName')]"
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat('nsg', variables('subnet1Name'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "allowSvcFabPortal",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "[variables('nt1fabricHttpGatewayPort')]",
              "direction": "Inbound",
              "priority": 3900,
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allowSvcFabClient",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "[variables('nt1fabricTcpGatewayPort')]",
              "direction": "Inbound",
              "priority": 3910,
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allowSvcFabCluser",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "1025-1027",
              "direction": "Inbound",
              "priority": 3920,
              "protocol": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allowSvcFabEphemeral",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "[concat(variables('nt1ephemeralStartPort'), '-', variables('nt1ephemeralEndPort'))]",
              "direction": "Inbound",
              "priority": 3930,
              "protocol": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allowSvcFabApplication",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "[concat(variables('nt1applicationStartPort'), '-', variables('nt1applicationEndPort'))]",
              "direction": "Inbound",
              "priority": 3940,
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allowSvcFabSMB",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "445",
              "direction": "Inbound",
              "priority": 3950,
              "protocol": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allowVNetRDP",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389-4500",
              "direction": "Inbound",
              "priority": 3960,
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allowReverseProxy",
            "properties": {
              "access": "Allow",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "[parameters('sfReverseProxyPort')]",
              "direction": "Inbound",
              "priority": 3970,
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          }
        ]
      },
      "tags": {
        "clusterName": "[parameters('clusterDnsName')]"
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('vmNodeType0Name')]",
      "location": "[parameters('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName0'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('applicationDiagnosticsStorageAccountName'))]",
        "omsWorkspaceDeployment"
      ],
      "properties": {
        "overprovision": false,
        "singlePlacementGroup": true,
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "extensionProfile": {
            "extensions": [
              {
                "name": "[concat('vmExt', variables('vmNodeType0Name'),'_servicefabric')]",
                "properties": {
                  "type": "ServiceFabricNode",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-06-15').key1]",
                    "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-06-15').key2]"
                  },
                  "publisher": "Microsoft.Azure.ServiceFabric",
                  "settings": {
                    "clusterEndpoint": "[reference(parameters('clusterDnsName')).clusterEndpoint]",
                    "nodeTypeRef": "[variables('vmNodeType0Name')]",
                    "nicPrefixOverride": "[variables('subnet0Prefix')]",
                    "dataPath": "D:\\SvcFab",
                    "durabilityLevel": "[parameters('node0Durability')]"
                  },
                  "typeHandlerVersion": "1.0"
                }
              },
              {
                "name": "[concat('vmExt', variables('vmNodeType0Name'),'_oms')]",
                "properties": {
                  "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                  "type": "MicrosoftMonitoringAgent",
                  "typeHandlerVersion": "1.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "workspaceId": "[reference('omsWorkspaceDeployment').outputs.omsWorkspaceId.value]"
                  },
                  "protectedSettings": {
                    "workspaceKey": "[reference('omsWorkspaceDeployment').outputs.omsWorkspaceKey.value]"
                  }
                }
              },
              {
                "name": "[concat('vmExt', variables('vmNodeType0Name'), '_diag')]",
                "properties": {
                  "type": "IaaSDiagnostics",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "storageAccountName": "[variables('applicationDiagnosticsStorageAccountName')]",
                    "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationDiagnosticsStorageAccountName')),'2015-06-15').key1]",
                    "storageAccountEndPoint": "https://core.windows.net/"
                  },
                  "publisher": "Microsoft.Azure.Diagnostics",
                  "settings": {
                    "WadCfg": {
                      "DiagnosticMonitorConfiguration": {
                        "overallQuotaInMB": "50000",
                        "EtwProviders": {
                          "EtwEventSourceProviderConfiguration": [
                            {
                              "provider": "Microsoft-ServiceFabric-Actors",
                              "scheduledTransferKeywordFilter": "1",
                              "scheduledTransferPeriod": "[parameters('perCounterTransferPeriod')]",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableActorEventTable"
                              }
                            },
                            {
                              "provider": "Microsoft-ServiceFabric-Services",
                              "scheduledTransferPeriod": "[parameters('perCounterTransferPeriod')]",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableServiceEventTable"
                              }
                            }
                          ],
                          "EtwManifestProviderConfiguration": [
                            {
                              "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
                              "scheduledTransferLogLevelFilter": "Information",
                              "scheduledTransferKeywordFilter": "4611686018427387928",
                              "scheduledTransferPeriod": "[parameters('perCounterTransferPeriod')]",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricSystemEventTable"
                              }
                            }
                          ]
                        },
                        "PerformanceCounters": {
                          "scheduledTransferPeriod": "[parameters('perCounterTransferPeriod')]",
                          "PerformanceCounterConfiguration": [
                            {
                              "counterSpecifier": "\\Service Fabric Transactional Replicator(*)\\Avg. Transaction ms/Commit",
                              "sampleRate": "[parameters('perfCounterSampleRate')]"
                            },
                            {
                              "counterSpecifier": "\\Service Fabric Service(*)\\# of outstanding requests",
                              "sampleRate": "[parameters('perfCounterSampleRate')]"
                            },
                            {
                              "counterSpecifier": "\\Service Fabric Service(*)\\Average milliseconds for response serialization",
                              "sampleRate": "[parameters('perfCounterSampleRate')]"
                            },
                            {
                              "counterSpecifier": "\\Service Fabric Service(*)\\Average milliseconds for request deserialization",
                              "sampleRate": "[parameters('perfCounterSampleRate')]"
                            },
                            {
                              "counterSpecifier": "\\Service Fabric Service(*)\\Average milliseconds per request",
                              "sampleRate": "[parameters('perfCounterSampleRate')]"
                            }
                          ]
                        }
                      }
                    },
                    "StorageAccount": "[variables('applicationDiagnosticsStorageAccountName')]"
                  },
                  "typeHandlerVersion": "1.5"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[concat(variables('nicName'), '-0')]",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "[concat(variables('nicName'),'-0')]",
                      "properties": {
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[variables('lbPoolID0')]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[variables('lbNatPoolID0')]"
                          }
                        ],
                        "subnet": {
                          "id": "[variables('subnet0Ref')]"
                        }
                      }
                    }
                  ],
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminPassword": "[parameters('adminPassword')]",
            "adminUsername": "[parameters('adminUsername')]",
            "computernamePrefix": "sf"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('vmImagePublisher')]",
              "offer": "[variables('vmImageOffer')]",
              "sku": "[variables('vmImageSku')]",
              "version": "[variables('vmImageVersion')]"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "[parameters('osDiskStorageAccountType')]"
              }
            }
          }
        }
      },
      "sku": {
        "name": "[parameters('node0VMSize')]",
        "capacity": "[parameters('node0Count')]",
        "tier": "Standard"
      },
      "tags": {
        "clusterName": "[parameters('clusterDnsName')]"
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('vmNodeType1Name')]",
      "location": "[parameters('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName1'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('applicationDiagnosticsStorageAccountName'))]",
        "omsWorkspaceDeployment"
      ],
      "properties": {
        "overprovision": false,
        "singlePlacementGroup": true,
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "extensionProfile": {
            "extensions": [
              {
                "name": "[concat('vmExt', variables('vmNodeType1Name'),'_servicefabric')]",
                "properties": {
                  "type": "ServiceFabricNode",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-06-15').key1]",
                    "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-06-15').key2]"
                  },
                  "publisher": "Microsoft.Azure.ServiceFabric",
                  "settings": {
                    "clusterEndpoint": "[reference(parameters('clusterDnsName')).clusterEndpoint]",
                    "nodeTypeRef": "[variables('vmNodeType1Name')]",
                    "nicPrefixOverride": "[variables('subnet1Prefix')]",
                    "dataPath": "D:\\SvcFab",
                    "durabilityLevel": "[parameters('node1Durability')]"
                  },
                  "typeHandlerVersion": "1.0"
                }
              },
              {
                "name": "[concat('vmExt', variables('vmNodeType1Name'),'_oms')]",
                "properties": {
                  "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                  "type": "MicrosoftMonitoringAgent",
                  "typeHandlerVersion": "1.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "workspaceId": "[reference('omsWorkspaceDeployment').outputs.omsWorkspaceId.value]"
                  },
                  "protectedSettings": {
                    "workspaceKey": "[reference('omsWorkspaceDeployment').outputs.omsWorkspaceKey.value]"
                  }
                }
              },
              {
                "name": "[concat('vmExt', variables('vmNodeType1Name'), '_diag')]",
                "properties": {
                  "type": "IaaSDiagnostics",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "storageAccountName": "[variables('applicationDiagnosticsStorageAccountName')]",
                    "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationDiagnosticsStorageAccountName')),'2015-06-15').key1]",
                    "storageAccountEndPoint": "https://core.windows.net/"
                  },
                  "publisher": "Microsoft.Azure.Diagnostics",
                  "settings": {
                    "WadCfg": {
                      "DiagnosticMonitorConfiguration": {
                        "overallQuotaInMB": "50000",
                        "EtwProviders": {
                          "EtwEventSourceProviderConfiguration": [
                            {
                              "provider": "Microsoft-ServiceFabric-Actors",
                              "scheduledTransferKeywordFilter": "1",
                              "scheduledTransferPeriod": "[parameters('perCounterTransferPeriod')]",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableActorEventTable"
                              }
                            },
                            {
                              "provider": "Microsoft-ServiceFabric-Services",
                              "scheduledTransferPeriod": "[parameters('perCounterTransferPeriod')]",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableServiceEventTable"
                              }
                            }
                          ],
                          "EtwManifestProviderConfiguration": [
                            {
                              "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
                              "scheduledTransferLogLevelFilter": "Information",
                              "scheduledTransferKeywordFilter": "4611686018427387928",
                              "scheduledTransferPeriod": "[parameters('perCounterTransferPeriod')]",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricSystemEventTable"
                              }
                            }
                          ]
                        },
                        "PerformanceCounters": {
                          "scheduledTransferPeriod": "[parameters('perCounterTransferPeriod')]",
                          "PerformanceCounterConfiguration": [
                            {
                              "counterSpecifier": "\\Service Fabric Transactional Replicator(*)\\Avg. Transaction ms/Commit",
                              "sampleRate": "[parameters('perfCounterSampleRate')]"
                            },
                            {
                              "counterSpecifier": "\\Service Fabric Service(*)\\# of outstanding requests",
                              "sampleRate": "[parameters('perfCounterSampleRate')]"
                            },
                            {
                              "counterSpecifier": "\\Service Fabric Service(*)\\Average milliseconds for response serialization",
                              "sampleRate": "[parameters('perfCounterSampleRate')]"
                            },
                            {
                              "counterSpecifier": "\\Service Fabric Service(*)\\Average milliseconds for request deserialization",
                              "sampleRate": "[parameters('perfCounterSampleRate')]"
                            },
                            {
                              "counterSpecifier": "\\Service Fabric Service(*)\\Average milliseconds per request",
                              "sampleRate": "[parameters('perfCounterSampleRate')]"
                            }
                          ]
                        }
                      }
                    },
                    "StorageAccount": "[variables('applicationDiagnosticsStorageAccountName')]"
                  },
                  "typeHandlerVersion": "1.5"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[concat(variables('nicName'), '-1')]",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "[concat(variables('nicName'),'-1')]",
                      "properties": {
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[variables('lbPoolID1')]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[variables('lbNatPoolID1')]"
                          }
                        ],
                        "subnet": {
                          "id": "[variables('subnet1Ref')]"
                        }
                      }
                    }
                  ],
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminPassword": "[parameters('adminPassword')]",
            "adminUsername": "[parameters('adminUsername')]",
            "computernamePrefix": "backend"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('vmImagePublisher')]",
              "offer": "[variables('vmImageOffer')]",
              "sku": "[variables('vmImageSku')]",
              "version": "[variables('vmImageVersion')]"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "[parameters('osDiskStorageAccountType')]"
              }
            }
          }
        }
      },
      "sku": {
        "name": "[parameters('node1VMSize')]",
        "capacity": "[parameters('node1Count')]",
        "tier": "Standard"
      },
      "tags": {
        "resourceType": "Service Nodes",
        "clusterDnsName": "[parameters('clusterDnsName')]"
      }
    },
    {
      "apiVersion": "2017-07-01-preview",
      "type": "Microsoft.ServiceFabric/clusters",
      "name": "[parameters('clusterDnsName')]",
      "location": "[parameters('computeLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]"
      ],
      "properties": {
        "clientCertificateCommonNames": [],
        "clientCertificateThumbprints": [],
        "diagnosticsStorageAccountConfig": {
          "blobEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), '2016-01-01').primaryEndpoints.blob]",
          "protectedAccountKeyName": "StorageAccountKey1",
          "queueEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), '2016-01-01').primaryEndpoints.queue]",
          "storageAccountName": "[variables('supportLogStorageAccountName')]",
          "tableEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), '2016-01-01').primaryEndpoints.table]"
        },
        "fabricSettings": [
          {
            "name": "ClusterManager",
            "parameters": [
              {
                "name": "EnableDefaultServicesUpgrade",
                "value": "true"
              }
            ]
          }
        ],
        "managementEndpoint": "[concat('http://',reference(variables('pipName0')).dnsSettings.fqdn, ':',variables('nt0fabricHttpGatewayPort'))]",
        "nodeTypes": [
          {
            "name": "[variables('vmNodeType0Name')]",
            "applicationPorts": {
              "startPort": "[variables('nt0applicationStartPort')]",
              "endPort": "[variables('nt0applicationEndPort')]"
            },
            "clientConnectionEndpointPort": "[variables('nt0fabricTcpGatewayPort')]",
            "durabilityLevel": "[parameters('node0Durability')]",
            "ephemeralPorts": {
              "startPort": "[variables('nt0ephemeralStartPort')]",
              "endPort": "[variables('nt0ephemeralEndPort')]"
            },
            "httpGatewayEndpointPort": "[variables('nt0fabricHttpGatewayPort')]",
            "isPrimary": true,
            "placementProperties": {
              "IsFabric": "true"
            },
            "reverseProxyEndpointPort": "[parameters('sfReverseProxyPort')]",
            "vmInstanceCount": "[parameters('node0Count')]"
          },
          {
            "name": "[variables('vmNodeType1Name')]",
            "applicationPorts": {
              "startPort": "[variables('nt1applicationStartPort')]",
              "endPort": "[variables('nt1applicationEndPort')]"
            },
            "clientConnectionEndpointPort": "[variables('nt1fabricTcpGatewayPort')]",
            "durabilityLevel": "[parameters('node1Durability')]",
            "ephemeralPorts": {
              "startPort": "[variables('nt1ephemeralStartPort')]",
              "endPort": "[variables('nt1ephemeralEndPort')]"
            },
            "httpGatewayEndpointPort": "[variables('nt1fabricHttpGatewayPort')]",
            "isPrimary": false,
            "placementProperties": {
              "IsFabric": "false",
              "IsBackend": "true"
            },
            "reverseProxyEndpointPort": "[parameters('sfReverseProxyPort')]",
            "vmInstanceCount": "[parameters('node1Count')]"
          }
        ],
        "addonFeatures": [
          "DnsService"
        ],
        "provisioningState": "Default",
        "reliabilityLevel": "[parameters('serviceFabricReliabilty')]",
        "vmImage": "Windows"
      },
      "tags": {
        "clusterName": "[parameters('clusterDnsName')]"
      }
    }
  ],
  "outputs": {
    "clusterDnsName": {
      "value": "[parameters('clusterDnsName')]",
      "type": "string"
    }
  }
}
